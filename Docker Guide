## Docker Image

1. Build an image from a Dockerfile:
    docker build -t image_name  path_to_dockerfile
    eg: 
        docker build -t myapp .

2. List all local images:
    docker images
    eg:
        docker image ls

3. Pull an image from Docker hub:
    docker pull image_name:tag
    eg:
        docker pull nginx:latest

4. Remove a local image:
    docker rmi image_name:tag
    eg:
        docker rmi myapp:latest

5. Tag an image:
    docker tag source_image:tag new_image:tag
    eg:
        docker tag myapp:latest myapp:v1

6. Push an image to Docker Hub:
    docker push image_name:tag
    eg:
        docker push myapp:v1

7. Inspect details of an image:
    docker image inspect image_name:tag
    eg:
        docker image inspect myapp:v1

8. Save an image to a tar archive:
    docker save -o image_name.tar image_name:tag
    eg:
        docker save -o myapp.tar myapp:v1

9. Load an image from a tar archive:
    docker load -i image_name.tar
    eg:
        docker load -i image_name.tar

10. Prune unused images:
    docker image prune

## Docker Container

1. Run a container from an image:
    docker run container_name image_name
    eg:
        docker run myapp

2. Run a named container from an image:
    docker run --name container_name image_name:tag
    eg:
        docker run --name my_container myapp:v1

3. List all running containers:
    docker ps

4. List all containers (Including stopped ones):
    docker ps -a

5. Stop a running container:
    docker stop container_name_or_id
    eg:
        docker stop my_container

6. Start a stopped container:
    docker start container_name_or_id
    eg:
        docker stop my_container

7. Run a container in interactive mode:
    docker run -it container_name_or_id
    eg:
        docker run -it my_container

8. Run a container in interactive shell mode:
    docker run -it container_name_or_id sh
    eg:
        docker run -it my_container sh

9. Remove a stopped container:
    docker rm container_name_or_id
    eg:
        docker rm my_container

10. Remove a running container (forcefully):
    docker rm-f container_name_or_id
    eg:
        docker rm -f my_container

11. Inspect details of a container:
    docker inspect container_name_or_id
    eg:
        docker inspect my_container

12. View container logs:
    docker logs container_name_or_id
    eg:
        docker logs my_container

13. Pause a running container:
    docker pause container_name_or_id
    eg:
        docker pause my_container

14. Unpause a paused container:
    docker unpause container_name_or_id
    eg:
        docker unpause my_container

## Docker Volumes and Network

1. Create a named volume:
    docker volume create volume_name
    eg:
        docker volume create my_volume

2. List all volumes:
    docker volume ls

3. Inspect details of a volume:
    docker volume inspecct volume_name
    eg:
        docker volume inspect my_volume

4. Remove a volume:
    docker volume rm volume_name
    eg:
        docker volume rm my_volume

5. Run a container with a volume (mount):
    docker run --name container_name -v volume_name:/path/in/container image_name:tag
    eg:
        docker run --name my_container -v my_volume:app/data myapp:v1

6. Copy files between a container and a volume:
    docker cp local_file_or_directory container_name:/path/in/container
    eg:
        docker cp data.txt my_container:app/data
